import React, { useState } from 'react';
import { getCardStyles, CARD_POSITIONING } from '../utils/cardSprites';

interface Card {
  rank: string;
  suit: string;
  display: string;
  hidden?: boolean;
}

interface RankCardProps {
  card: Card;
  size?: 'small' | 'medium' | 'large';
  showSuit?: boolean;
  useImages?: boolean; // –ù–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ–∂–¥—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ —Å—Ç–∏–ª–µ–º
}

const RankCard: React.FC<RankCardProps> = ({ 
  card, 
  size = 'medium', 
  showSuit = true, 
  useImages = false 
}) => {
  const [imageError, setImageError] = useState(false);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–Ω–≥–∞ –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ
  const getRankColor = (rank: string): string => {
    switch (rank) {
      case 'A': return '#e74c3c'; // –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è —Ç—É–∑–∞
      case 'K': return '#e74c3c'; // –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –∫–æ—Ä–æ–ª—è
      case 'Q': return '#e74c3c'; // –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –¥–∞–º—ã
      case 'J': return '#e74c3c'; // –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –≤–∞–ª–µ—Ç–∞
      case 'T': return '#f39c12'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π –¥–ª—è –¥–µ—Å—è—Ç–∫–∏
      case '9': return '#f39c12'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π –¥–ª—è –¥–µ–≤—è—Ç–∫–∏
      case '8': return '#f39c12'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π –¥–ª—è –≤–æ—Å—å–º–µ—Ä–∫–∏
      case '7': return '#f39c12'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π –¥–ª—è —Å–µ–º–µ—Ä–∫–∏
      case '6': return '#3498db'; // –°–∏–Ω–∏–π –¥–ª—è —à–µ—Å—Ç–µ—Ä–∫–∏
      case '5': return '#3498db'; // –°–∏–Ω–∏–π –¥–ª—è –ø—è—Ç–µ—Ä–∫–∏
      case '4': return '#27ae60'; // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è —á–µ—Ç–≤–µ—Ä–∫–∏
      case '3': return '#27ae60'; // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è —Ç—Ä–æ–π–∫–∏
      case '2': return '#27ae60'; // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è –¥–≤–æ–π–∫–∏
      default: return '#95a5a6'; // –°–µ—Ä—ã–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –º–∞—Å—Ç–∏
  const getSuitColor = (suit: string): string => {
    switch (suit) {
      case 'h': return '#e74c3c'; // –ß–µ—Ä–≤—ã - –∫—Ä–∞—Å–Ω—ã–π
      case 'd': return '#e74c3c'; // –ë—É–±–Ω—ã - –∫—Ä–∞—Å–Ω—ã–π
      case 'c': return '#2c3e50'; // –¢—Ä–µ—Ñ—ã - —á–µ—Ä–Ω—ã–π
      case 's': return '#2c3e50'; // –ü–∏–∫–∏ - —á–µ—Ä–Ω—ã–π
      default: return '#2c3e50';
    }
  };

  // –°–∏–º–≤–æ–ª—ã –º–∞—Å—Ç–µ–π
  const getSuitSymbol = (suit: string): string => {
    switch (suit) {
      case 'h': return '‚ô•';
      case 'd': return '‚ô¶';
      case 'c': return '‚ô£';
      case 's': return '‚ô†';
      default: return suit;
    }
  };

  // –†–∞–∑–º–µ—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç size
  const getSizeStyles = () => {
    switch (size) {
      case 'small':
        return {
          width: '32px',
          height: '45px',
          fontSize: '0.8rem',
          borderRadius: '4px'
        };
      case 'large':
        return {
          width: '60px',
          height: '85px',
          fontSize: '1.4rem',
          borderRadius: '8px'
        };
      default: // medium
        return {
          width: '45px',
          height: '65px',
          fontSize: '1.1rem',
          borderRadius: '6px'
        };
    }
  };

  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è sprite sheet –∫–∞—Ä—Ç—ã
  const getSpriteCardStyles = () => {
    try {
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à —Ñ–æ—Ä–º–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç sprite sheet
      const suitMap: { [key: string]: string } = {
        's': 'spades',
        'h': 'hearts',  
        'd': 'diamonds',
        'c': 'clubs'
      };
      
      const rankMap: { [key: string]: string } = {
        'T': '10'
      };
      
      const mappedRank = rankMap[card.rank] || card.rank;
      const mappedSuit = suitMap[card.suit];
      
      if (!mappedSuit) {
        throw new Error(`Unknown suit: ${card.suit}`);
      }
      
      const { width, height } = getSizePixels();
      return getCardStyles(mappedSuit as any, mappedRank as any, width, height);
    } catch (error) {
      console.warn('Error getting sprite card styles:', error);
      return null;
    }
  };

  // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –≤ –ø–∏–∫—Å–µ–ª—è—Ö —Å —É—á–µ—Ç–æ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const getSizePixels = () => {
    switch (size) {
      case 'small':
        return { 
          width: Math.round(CARD_POSITIONING.boxSize.width * 0.4), 
          height: Math.round(CARD_POSITIONING.boxSize.height * 0.4) 
        };
      case 'large':
        return { 
          width: Math.round(CARD_POSITIONING.boxSize.width * 0.75), 
          height: Math.round(CARD_POSITIONING.boxSize.height * 0.75) 
        };
      default: // medium
        return { 
          width: Math.round(CARD_POSITIONING.boxSize.width * 0.56), 
          height: Math.round(CARD_POSITIONING.boxSize.height * 0.56) 
        };
    }
  };

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∫–∞—Ä—Ç—ã (fallback)
  const getCardImagePath = () => {
    // –§–æ—Ä–º–∞—Ç: /cards/AS.png, /cards/KH.png, etc.
    const suitMap: { [key: string]: string } = {
      's': 'S', // Spades
      'h': 'H', // Hearts  
      'd': 'D', // Diamonds
      'c': 'C'  // Clubs
    };
    
    const rankMap: { [key: string]: string } = {
      'T': '10'
    };
    
    const mappedRank = rankMap[card.rank] || card.rank;
    const mappedSuit = suitMap[card.suit] || card.suit.toUpperCase();
    
    return `/cards/${mappedRank}${mappedSuit}.png`;
  };

  const rankColor = getRankColor(card.rank);
  const suitColor = getSuitColor(card.suit);
  const suitSymbol = getSuitSymbol(card.suit);
  const sizeStyles = getSizeStyles();

  // –ï—Å–ª–∏ –∫–∞—Ä—Ç–∞ —Å–∫—Ä—ã—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä—É–±–∞—à–∫—É
  if (card.hidden) {
    return (
      <div
        className="rank-card-hidden"
        style={{
          ...sizeStyles,
          background: 'linear-gradient(135deg, #2c3e50 0%, #34495e 100%)',
          border: '2px solid #34495e',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          position: 'relative',
          boxShadow: '0 2px 4px rgba(0,0,0,0.3)',
          margin: '2px',
          transition: 'all 0.2s ease',
          cursor: 'default'
        }}
      >
        <div style={{
          color: '#7f8c8d',
          fontSize: size === 'small' ? '0.6rem' : size === 'large' ? '1rem' : '0.8rem',
          fontWeight: 'bold',
          textAlign: 'center'
        }}>
          üÇ†
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è - –ø—Ä–æ–±—É–µ–º sprite sheet —Å–Ω–∞—á–∞–ª–∞
  if (useImages) {
    const spriteStyles = getSpriteCardStyles();
    
    // –ï—Å–ª–∏ sprite sheet –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if (spriteStyles && !imageError) {
      return (
        <div
          className="rank-card-sprite"
          style={{
            ...spriteStyles,
            margin: '2px',
            transition: 'all 0.2s ease',
            cursor: 'default'
          }}
        />
      );
    }
    
    // Fallback –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
    if (!imageError) {
      return (
        <div
          className="rank-card-image"
          style={{
            ...sizeStyles,
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            position: 'relative',
            margin: '2px',
            transition: 'all 0.2s ease',
            cursor: 'default'
          }}
        >
          <img
            src={getCardImagePath()}
            alt={`${card.rank}${card.suit}`}
            onError={() => setImageError(true)}
            style={{
              width: '100%',
              height: '100%',
              objectFit: 'contain',
              borderRadius: sizeStyles.borderRadius,
              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
            }}
          />
        </div>
      );
    }
  }

  // Fallback –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å—Ç–∏–ª—å (–µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏)
  return (
    <div
      className="rank-card"
      style={{
        ...sizeStyles,
        background: 'white',
        border: '2px solid #ddd',
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        justifyContent: 'center',
        position: 'relative',
        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
        margin: '2px',
        transition: 'all 0.2s ease',
        cursor: 'default'
      }}
    >
      {/* –¶–≤–µ—Ç–Ω–∞—è –ø–æ–ª–æ—Å–∫–∞ —Å–≤–µ—Ä—Ö—É –¥–ª—è —Ä–∞–Ω–≥–∞ */}
      <div
        style={{
          position: 'absolute',
          top: 0,
          left: 0,
          right: 0,
          height: '6px',
          background: rankColor,
          borderRadius: `${sizeStyles.borderRadius} ${sizeStyles.borderRadius} 0 0`
        }}
      />
      
      {/* –†–∞–Ω–≥ –∫–∞—Ä—Ç—ã */}
      <div
        style={{
          fontSize: sizeStyles.fontSize,
          fontWeight: 'bold',
          color: '#2c3e50',
          lineHeight: 1,
          marginTop: size === 'small' ? '4px' : '8px'
        }}
      >
        {card.rank}
      </div>
      
      {/* –ú–∞—Å—Ç—å –∫–∞—Ä—Ç—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å) */}
      {showSuit && (
        <div
          style={{
            fontSize: size === 'small' ? '0.7rem' : size === 'large' ? '1.2rem' : '0.9rem',
            color: suitColor,
            lineHeight: 1,
            marginTop: '2px'
          }}
        >
          {suitSymbol}
        </div>
      )}
    </div>
  );
};

export default RankCard; 