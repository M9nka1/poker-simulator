import React, { useState, useEffect } from 'react';
import { GameSession } from '../App';

interface JoinSessionPageProps {
  onSessionJoined: (session: GameSession) => void;
  onBackToSetup: () => void;
}

interface SessionInfo {
  sessionId: string;
  gameType: string;
  tableCount: number;
  createdAt: string;
  playerCount: number;
  maxPlayers: number;
}

const JoinSessionPage: React.FC<JoinSessionPageProps> = ({ 
  onSessionJoined, 
  onBackToSetup 
}) => {
  const [sessions, setSessions] = useState<SessionInfo[]>([]);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<string>('');
  const [selectedSessionId, setSelectedSessionId] = useState<string>('');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Å—Å–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    loadAvailableSessions();
  }, []);

  const loadAvailableSessions = async () => {
    setIsLoading(true);
    setError('');

    try {
      const response = await fetch('/api/sessions');
      
      if (response.ok) {
        const sessionsData = await response.json();
        setSessions(sessionsData);
      } else {
        throw new Error('Failed to load sessions');
      }
    } catch (error) {
      console.error('Load sessions error:', error);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ —Å–µ—Å—Å–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
    } finally {
      setIsLoading(false);
    }
  };

  const handleJoinSession = async (sessionId: string) => {
    setIsLoading(true);
    setError('');

    try {
      const response = await fetch(`/api/session/${sessionId}`);
      
      if (response.ok) {
        const sessionData = await response.json();
        
        const gameSession: GameSession = {
          sessionId: sessionData.sessionId,
          tables: sessionData.tables,
          settings: sessionData.settings,
          playerNames: sessionData.playerNames || []
        };
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        openPlayerWindow(sessionData.sessionId, sessionData.tables[0].id, sessionData.playerNames || []);
        
        alert(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Å—Å–∏–∏!\n\n–û—Ç–∫—Ä—ã—Ç–æ –Ω–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –∏–≥—Ä—ã.\n–í—ã –∏–≥—Ä–∞–µ—Ç–µ –∫–∞–∫ –ò–≥—Ä–æ–∫ 2.`);
        
      } else if (response.status === 404) {
        setError('–°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –û–±–Ω–æ–≤–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —Å–µ—Å—Å–∏–π.');
        loadAvailableSessions();
      } else {
        throw new Error('Failed to join session');
      }
    } catch (error) {
      console.error('Join session error:', error);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Å–µ—Å—Å–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsLoading(false);
    }
  };

  const openPlayerWindow = (sessionId: string, tableId: number, playerNames: string[]) => {
    // –°–æ–∑–¥–∞–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è —Å—Ç–æ–ª–∞
    const baseUrl = window.location.origin;
    const tableUrl = new URL(`${baseUrl}`);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ hash –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –Ω–æ–≤–æ–µ –æ–∫–Ω–æ
    tableUrl.hash = `table?sessionId=${sessionId}&tableId=${tableId}&playerNames=${encodeURIComponent(JSON.stringify(playerNames))}`;
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞ –¥–ª—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –±–µ–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –±—Ä–∞—É–∑–µ—Ä–∞
    const windowFeatures = [
      'width=1200',
      'height=800',
      'left=150',
      'top=150',
      'resizable=yes',
      'scrollbars=no',
      'status=no',
      'menubar=no',
      'toolbar=no',
      'location=no',
      'directories=no',
      'titlebar=no',
      'chrome=no',
      'fullscreen=no'
    ].join(',');
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ
    const newWindow = window.open(
      tableUrl.toString(),
      `poker-table-${sessionId}-${tableId}`,
      windowFeatures
    );
    
    if (newWindow) {
      // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
      newWindow.focus();
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
      newWindow.addEventListener('load', () => {
        newWindow.document.title = `–ü–æ–∫–µ—Ä–Ω—ã–π —Å—Ç–æ–ª #${tableId} - –°–µ—Å—Å–∏—è ${sessionId.substring(0, 8)}`;
      });
    } else {
      // –ï—Å–ª–∏ –æ–∫–Ω–æ –Ω–µ –æ—Ç–∫—Ä—ã–ª–æ—Å—å (–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –±—Ä–∞—É–∑–µ—Ä–æ–º)
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤–æ–µ –æ–∫–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –æ–∫–æ–Ω –≤ –±—Ä–∞—É–∑–µ—Ä–µ.');
    }
  };

  const formatGameType = (sessionInfo: SessionInfo) => {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–∏–ø –∏–≥—Ä—ã –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    if (sessionInfo.gameType && sessionInfo.gameType !== 'Unknown') {
      return sessionInfo.gameType;
    }
    return '–ü–æ–∫–µ—Ä —Å–µ—Å—Å–∏—è';
  };

  const formatCreatedTime = (createdAt: string) => {
    const date = new Date(createdAt);
    const now = new Date();
    const diffMs = now.getTime() - date.getTime();
    const diffMins = Math.floor(diffMs / (1000 * 60));
    
    if (diffMins < 1) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
    if (diffMins < 60) return `${diffMins} –º–∏–Ω –Ω–∞–∑–∞–¥`;
    
    const diffHours = Math.floor(diffMins / 60);
    if (diffHours < 24) return `${diffHours} —á –Ω–∞–∑–∞–¥`;
    
    return date.toLocaleDateString('ru-RU');
  };

  return (
    <div style={{
      maxWidth: '800px',
      margin: '0 auto',
      padding: '20px'
    }}>
      <div style={{
        background: 'rgba(255, 255, 255, 0.05)',
        borderRadius: '15px',
        padding: '30px'
      }}>
        <h2 style={{ 
          color: '#4CAF50', 
          marginBottom: '10px',
          fontSize: '2rem',
          textAlign: 'center'
        }}>
          üéÆ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ
        </h2>
        
        <p style={{ 
          color: 'rgba(255, 255, 255, 0.8)', 
          marginBottom: '30px',
          fontSize: '1.1rem',
          textAlign: 'center'
        }}>
          –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Å—Å–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä
        </p>

        <div style={{ 
          display: 'flex', 
          justifyContent: 'space-between', 
          alignItems: 'center',
          marginBottom: '20px'
        }}>
          <h3 style={{ color: 'white', margin: 0 }}>
            –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Å—Å–∏–∏ ({sessions.length})
          </h3>
          <button
            onClick={loadAvailableSessions}
            disabled={isLoading}
            style={{
              padding: '8px 16px',
              borderRadius: '8px',
              border: '2px solid #2196F3',
              backgroundColor: 'transparent',
              color: '#2196F3',
              cursor: isLoading ? 'not-allowed' : 'pointer',
              fontSize: '14px',
              fontWeight: 'bold',
              opacity: isLoading ? 0.5 : 1
            }}
          >
            {isLoading ? 'üîÑ' : 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å'}
          </button>
        </div>

        {error && (
          <div style={{
            color: '#e74c3c',
            marginBottom: '20px',
            fontSize: '0.9rem',
            fontWeight: 'bold',
            textAlign: 'center',
            padding: '10px',
            background: 'rgba(231, 76, 60, 0.1)',
            border: '1px solid rgba(231, 76, 60, 0.3)',
            borderRadius: '8px'
          }}>
            ‚ùå {error}
          </div>
        )}

        {isLoading && sessions.length === 0 ? (
          <div style={{
            textAlign: 'center',
            padding: '40px',
            color: 'rgba(255, 255, 255, 0.6)'
          }}>
            üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Å—Å–∏–π...
          </div>
        ) : sessions.length === 0 ? (
          <div style={{
            textAlign: 'center',
            padding: '40px',
            color: 'rgba(255, 255, 255, 0.6)',
            background: 'rgba(255, 255, 255, 0.05)',
            borderRadius: '10px',
            border: '2px dashed rgba(255, 255, 255, 0.2)'
          }}>
            <div style={{ fontSize: '3rem', marginBottom: '15px' }}>üéØ</div>
            <h3 style={{ color: 'rgba(255, 255, 255, 0.8)', marginBottom: '10px' }}>
              –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Å—Å–∏–π
            </h3>
            <p style={{ margin: 0 }}>
              –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∏–≥—Ä—É –∏–ª–∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –¥—Ä—É–≥–∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–µ—Å—Å–∏–µ–π
            </p>
          </div>
        ) : (
          <div style={{
            display: 'grid',
            gap: '15px',
            marginBottom: '20px'
          }}>
            {sessions.map((session) => (
              <div
                key={session.sessionId}
                style={{
                  background: selectedSessionId === session.sessionId 
                    ? 'rgba(76, 175, 80, 0.2)' 
                    : 'rgba(255, 255, 255, 0.08)',
                  border: selectedSessionId === session.sessionId 
                    ? '2px solid #4CAF50' 
                    : '2px solid rgba(255, 255, 255, 0.2)',
                  borderRadius: '12px',
                  padding: '20px',
                  cursor: 'pointer',
                  transition: 'all 0.3s ease'
                }}
                onClick={() => setSelectedSessionId(session.sessionId)}
              >
                <div style={{
                  display: 'grid',
                  gridTemplateColumns: '1fr auto',
                  gap: '15px',
                  alignItems: 'center'
                }}>
                  <div>
                    <h4 style={{
                      color: 'white',
                      margin: '0 0 8px 0',
                      fontSize: '1.2rem'
                    }}>
                      üéØ {formatGameType(session)}
                    </h4>
                    
                    <div style={{
                      display: 'grid',
                      gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))',
                      gap: '10px',
                      marginBottom: '10px'
                    }}>
                      <div style={{ color: 'rgba(255, 255, 255, 0.8)', fontSize: '0.9rem' }}>
                        üèÜ –°—Ç–æ–ª–æ–≤: {session.tableCount}
                      </div>
                      <div style={{ color: 'rgba(255, 255, 255, 0.8)', fontSize: '0.9rem' }}>
                        üë• –ò–≥—Ä–æ–∫–æ–≤: {session.playerCount}/{session.maxPlayers}
                      </div>
                      <div style={{ color: 'rgba(255, 255, 255, 0.8)', fontSize: '0.9rem' }}>
                        ‚è∞ {formatCreatedTime(session.createdAt)}
                      </div>
                    </div>
                    
                    <div style={{
                      color: 'rgba(255, 255, 255, 0.6)',
                      fontSize: '0.8rem',
                      fontFamily: 'monospace'
                    }}>
                      ID: {session.sessionId.substring(0, 8)}...
                    </div>
                  </div>
                  
                  <button
                    onClick={(e) => {
                      e.stopPropagation();
                      handleJoinSession(session.sessionId);
                    }}
                    disabled={isLoading}
                    style={{
                      padding: '12px 20px',
                      borderRadius: '8px',
                      border: '2px solid #4CAF50',
                      backgroundColor: '#4CAF50',
                      color: 'white',
                      cursor: isLoading ? 'not-allowed' : 'pointer',
                      fontSize: '14px',
                      fontWeight: 'bold',
                      opacity: isLoading ? 0.5 : 1,
                      minWidth: '100px'
                    }}
                  >
                    {isLoading ? '‚è≥' : 'üöÄ –ò–≥—Ä–∞—Ç—å'}
                  </button>
                </div>
              </div>
            ))}
          </div>
        )}

        <div style={{
          display: 'flex',
          justifyContent: 'center',
          marginTop: '30px'
        }}>
          <button
            onClick={onBackToSetup}
            disabled={isLoading}
            style={{
              padding: '15px 30px',
              borderRadius: '10px',
              border: '2px solid #95a5a6',
              backgroundColor: 'transparent',
              color: '#95a5a6',
              cursor: isLoading ? 'not-allowed' : 'pointer',
              fontSize: '16px',
              fontWeight: 'bold',
              opacity: isLoading ? 0.5 : 1
            }}
          >
            ‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∏–≥—Ä—ã
          </button>
        </div>

        <div style={{
          marginTop: '30px',
          padding: '20px',
          background: 'rgba(33, 150, 243, 0.1)',
          border: '1px solid rgba(33, 150, 243, 0.3)',
          borderRadius: '10px'
        }}>
          <h4 style={{ 
            color: '#2196F3', 
            marginBottom: '15px',
            fontSize: '1.1rem'
          }}>
            üí° –ö–∞–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ?
          </h4>
          
          <div style={{ 
            color: 'rgba(255, 255, 255, 0.8)',
            fontSize: '0.9rem',
            textAlign: 'left'
          }}>
            <p style={{ margin: '5px 0' }}>
              1. –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Å—Å–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ
            </p>
            <p style={{ margin: '5px 0' }}>
              2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üöÄ –ò–≥—Ä–∞—Ç—å" –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            </p>
            <p style={{ margin: '5px 0' }}>
              3. –û—Ç–∫—Ä–æ–µ—Ç—Å—è –Ω–æ–≤–æ–µ –æ–∫–Ω–æ —Å –ø–æ–∫–µ—Ä–Ω—ã–º —Å—Ç–æ–ª–æ–º
            </p>
            <p style={{ margin: '5px 0' }}>
              4. –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞–Ω–µ—Ç–µ –ò–≥—Ä–æ–∫–æ–º 2
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default JoinSessionPage; 